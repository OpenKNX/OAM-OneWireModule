;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = build
libdeps_dir = /tmp/libdeps

[env]
framework = arduino
;platform = atmelsam
; board = zeroUSB
; board = adafruit_itsybitsy_m0
platform = https://github.com/mumpf/platform-raspberrypi.git
board = pico
board_build.core = earlephilhower
; configure filesystem size. Default 0 Mbyte.
; board_build.filesystem_size = 1M
; inject core package.. not yet registered with PlatformIO
; registry, so pull working version directly from git / download page.
; note that download link for toolchain is specific for OS. see https://github.com/earlephilhower/pico-quick-toolchain/releases.
platform_packages = 
    mumpf/framework-arduinopico@https://github.com/mumpf/arduino-pico.git
    maxgerhardt/toolchain-pico@https://github.com/earlephilhower/pico-quick-toolchain/releases/download/1.3.2-a/x86_64-w64-mingw32.arm-none-eabi-9d55fd1.220202.zip

    ; maxgerhardt/framework-arduinopico@file://c:\users\d019748\platformio\arduino-pico

build_flags = 
  -DDEBUG_DELAY=10000
  ; select correct hardware to compile for
  ; the following 2 lines are for board=zeroUSB
  ; -D BOARD_MASIFI_ONEWIRE
  ; -D SERIAL_DEBUG=SerialUSB
  ; the following 2 lines are for board=adafruit_itsybitsy_m0
  ; -D BOARD_MASIFI_ONEWIRE_ITSYBITSY_M0
  ; -D SERIAL_DEBUG=Serial
  ; the following 2 lines are for board=adafruit_itsybitsy_m0
  -D BOARD_MASIFI_PICO
  -D SERIAL_DEBUG=Serial
  ; optimize knx stack
  -D SMALL_GROUPOBJECT
  ; -D WATCHDOG
  ; use correct generated header file logic
  -D WIREGATEWAY
  -D MASK_VERSION=0x07B0
  -D KNX_FLASH_SIZE=0x4000
  -D KNX_FLASH_OFFSET=0x180000 
  ; -D USE_SAMD_EEPROM_EMULATION
  ; -D USE_RP2040_EEPROM_EMULATION
  ; -D USE_RP2040_LARGE_EEPROM_EMULATION
  ; trace logic execution in logicmodule
  ;-D LOGIC_TRACE
  ; debug timing in knx stack
  ;-D DEBUG_TIMING
  ; debug timing in 1-Wire-Search
  ;-D DebugInfoBM
  ;-D DebugInfoSearch
  ; watchdog support, deactivate for debugging
  -frtti
  -Wno-unknown-pragmas 
  -Wno-switch
  -Wno-write-strings
  -Wno-format-overflow
monitor_speed = 115200
lib_ldf_mode = deep+
lib_extra_dirs = 
  ..
; lib_deps = 
;   SPI
;   Wire

debug_tool = jlink
debug_build_flags = -O0 -ggdb3
; debug_tool = atmel-ice
[env:build]
upload_protocol = jlink
[env:debug]
build_type = debug
; debug_build_flags = 
;   -Og 
;   -ggdb2 
;   -g2
; debug_build_flags = -O0 -ggdb3 -g3
; debug_init_cmds =
;   target extended-remote $DEBUG_PORT
;   $INIT_BREAK
;   ; monitor reset 0
;   $LOAD_CMDS
;   ; monitor init
;   monitor reset 0
debug_extra_cmds = 
  set output-radix 16

[env:uploadUSB]
upload_protocol = picotool
[env:uploadJLINK]
upload_protocol = jlink
[env:uploadATMEL]
upload_protocol = atmel-ice

